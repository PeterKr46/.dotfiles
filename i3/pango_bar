#!/bin/bash

# Width of the bar in characters
width=35

filled_color='#fff'
empty_color='#333'

if [[ -z $1 || -z $2 || -z $3 ]]; then
    echo "Usage: bar <state> <min> <max> [length] [Text] [col:filled] [col:empty]"
    exit
fi

text="$(echo "100*($1-$2)/($3-$2)" | bc)%"

# Optional parameter bar width
[[ -z $4 ]] || width=$4
[[ -z $5 ]] || text=$(printf "%s" $5 | tr '\n' ' ')
[[ -z $6 ]] || filled_color=$6
[[ -z $7 ]] || empty_color=$7

# Compute number of characters to actually fill
filled_flt=$(printf "%.2f" $(echo "scale = 2; ($1-$2)/($3-$2)*$width" | bc))
filled=$(echo $filled_flt | grep -Po "([0-9]+)" | head -n 1)

[[ 0 -gt ${#text}-$width ]] && text=${text:0:width}

textlen=${#text}
padding_size=$(echo "$width/2 - $textlen/2" | bc)
padding=$(printf "%0.s " $(seq 1 $padding_size))

bar=$(printf "%s%s%s\n" "$padding" $text "$padding")


printf "<span background='$filled_color' foreground='$empty_color'>"
[[ $(($1-$2)) -gt 0 ]]        && printf "%s" "${bar:0:filled}"
printf "</span><span background='$empty_color' foreground='$filled_color'>"
[[ $((width-filled)) -gt 0 ]] && printf "%s" "${bar:filled:-1}"
printf "</span>‚ñè"
